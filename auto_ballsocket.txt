@name auto ballsocket
@persist [Wheels SteeringWheels]:array Mode:string [Base SetAng]:entity ModeI Modes:array

#[
    Xandertron5000 - STEAM_0:1:42942061 - github.com/Xandertron
]#

interval(10)
if(first()){
    function number entity:goodBallsocket(Ent2:entity){
        local Ent = This
        ballsocket(Ent,vec(0,0,0),Ent2,vec(-180.000,-0.100000,-0.100000),vec(180.000,0.100000,0.100000),vec(0,0,0),1)#YZ
        ballsocket(Ent,vec(0,0,0),Ent2,vec(-180.000,-180.000,-0.100000),vec(180.000,180.000,0.100000),vec(0,0,0),1)#Z
        ballsocket(Ent,vec(0,0,0),Ent2,vec(-180.000,-0.100000,-180.000),vec(180.000,0.100000,180.000),vec(0,0,0),1)#Y
        ballsocket(Ent2,vec(0,0,0),Ent,vec(-180.000,-0.100000,-0.100000),vec(180.000,0.100000,0.100000),vec(0,0,0),1)#YZ
        ballsocket(Ent2,vec(0,0,0),Ent,vec(-180.000,-180.000,-0.100000),vec(180.000,180.000,0.100000),vec(0,0,0),1)#Z
        ballsocket(Ent2,vec(0,0,0),Ent,vec(-180.000,-0.100000,-180.000),vec(180.000,0.100000,180.000),vec(0,0,0),1)#Y
        return 1
    }
    #make a function to check if the ent is in the array
    function number entIsInArray(E:entity,A:array){
        for(I=1,A:count()){
            if(A[I,entity]==E){
                return 1
                C=1
                break
            }
        }
        if(!C){ 
            return 0
        }
    }
    printColor(vec(255),"-ballsocket to ballsocket the wheels and delete the e2
-reset to reset the e2
Press walk key (default left alt) to cycle modes, press right click to select the prop

Make sure your contraption is facing north! You can find this by placing a spray down, it should face north
",vec(100,100,255),"Current Mode: ",vec(255),"Wheels")
    runOnChat(1)
    
    Mode = "Wheels"
    ModeI=1
    Modes = array(
        "Wheels",
        "Steering Wheels",
        "Base",
        "SetAng"
    )
}
if(changed(owner():keyAttack2())&owner():keyAttack2()){
    if(Mode=="Wheels"){
        Wheel = owner():aimEntity()
        if(!entIsInArray(Wheel,Wheels)){
            Wheels:pushEntity(Wheel)
            J = Wheels:count()
            holoCreate(J)
            holoModel(J,Wheels[J,entity]:model())
            holoPos(J,Wheels[J,entity]:pos())
            holoAng(J,Wheels[J,entity]:angles())
            holoScale(J,vec(1.02,1.02,1.02))
            holoMaterial(J,"models/wireframe")
            holoColor(J,vec(80,80,255))
            printColor(vec(100,100,255),"Selected: ",vec(255),Wheels[J,entity]:model())
        }
    }
    elseif(Mode=="Steering Wheels"){
        Wheel = owner():aimEntity()
        if(!entIsInArray(Wheel,SteeringWheels)){
            SteeringWheels:pushEntity(Wheel)
            J = SteeringWheels:count()
            holoCreate(J+100)
            holoModel(J+100,SteeringWheels[J,entity]:model())
            holoPos(J+100,SteeringWheels[J,entity]:pos())
            holoAng(J+100,SteeringWheels[J,entity]:angles())
            holoScale(J+100,vec(1.02,1.02,1.02))
            holoMaterial(J+100,"models/wireframe")
            holoColor(J+100,vec(80,255,80))
            printColor(vec(100,100,255),"Selected: ",vec(255),SteeringWheels[J,entity]:model())
        }
    }
    elseif(Mode=="Base"){
        Base = owner():aimEntity()
        holoCreate(299)
        holoModel(299,Base:model())
        holoPos(299,Base:pos())
        holoAng(299,Base:angles())
        holoScale(299,vec(1.02,1.02,1.02))
        holoMaterial(299,"models/wireframe")
        holoColor(299,vec(0,0,255))
        printColor(vec(100,100,255),"Selected: ",vec(255),Base:model())
    }
    elseif(Mode=="SetAng"){
        SetAng = owner():aimEntity()
        holoCreate(298)
        holoModel(298,SetAng:model())
        holoPos(298,SetAng:pos())
        holoAng(298,SetAng:angles())
        holoScale(298,vec(1.02,1.02,1.02))
        holoMaterial(298,"models/wireframe")
        holoColor(298,vec(0,255,0))
        printColor(vec(100,100,255),"Selected: ",vec(255),SetAng:model())
    }
}
if(changed(owner():keyWalk())&owner():keyWalk()){
    ModeI++
    if(ModeI>4){
        ModeI=1
    }
    Mode = Modes[ModeI,string]
    printColor(vec(100,100,255),"Current Mode: ",vec(255),Mode)
}
if(chatClk(owner())){
    Cmd = lastSaid():lower()
    if(Cmd == "-ballsocket"){
        hideChat(1)
        printColor(vec(100,100,255),"Attempting to ballsocket all selected entities!")
        for(I=1,SteeringWheels:count()){
            SteeringWheels[I,entity]:goodBallsocket(SetAng)
        }
        for(I=1,Wheels:count()){
            Wheels[I,entity]:goodBallsocket(Base)
        }
        printColor(vec(100,100,255),"Done!")
        holoDeleteAll()
        selfDestruct()
    }
    elseif(Cmd == "-reset"){
        hideChat(1)
        printColor(vec(100,100,255),"E2 Restarted")
        reset()
    }
}
