@name colorpicker
@inputs E:wirelink U:entity
@outputs Color:vector
@persist H
@trigger U

interval(100)
if(first()){
    entity():createWire(entity():isWeldedTo(),"E","wirelink")
    entity():createWire(entity():isWeldedTo(),"U","User")
    E:egpClear()
    E:egpBox(1,vec2(256-16,256),vec2(512-16,512))
    E:egpColor(1,vec(255,0,0))
    E:egpBox(2,vec2(256-16,256),vec2(512-16,512))
    E:egpMaterial(2,"vgui/gradient-r")
    E:egpBox(3,vec2(256-16,256),vec2(512-16,512))
    E:egpMaterial(3,"vgui/gradient-d")
    E:egpColor(3,vec())
    E:egpBox(4,vec2(512-8,256),vec2(46,512))
    E:egpMaterial(4,"vgui/hsv-bar")
    E:egpBox(5,vec2(256),vec2(16))
    E:egpMaterial(5,"vgui/icon_arrow_down")
    E:egpBox(8,vec2(512-8,0),vec2(46,4))
    E:egpColor(8,vec(0))
    H = 0
    
}
E:egpRemove(6)
E:egpRemove(7)
for(I=1,players():count()){
    Ply = players()[I,entity]
    if(Ply:keyUse()&Ply:pos():distance(E:entity():pos())<200){
        X = E:egpCursor(Ply)[1]
        Y = E:egpCursor(Ply)[2]
        if(inrange(X,0,512-32)&inrange(Y,0,512)){
            S = round(1-X/(512-16),7)
            V = clamp(round(1-Y/(512-16),7),0,1)
            C = hsv2rgb(H,S,V)
            Color = C
            E:egpColor(5)
            E:egpPos(5,vec2(X,Y-4))
            E:egpBox(6,vec2(X+24,Y-4),vec2(20))
            E:egpBoxOutline(7,vec2(X+24,Y-4),vec2(22))
            E:egpSize(7,2)
            E:egpColor(7,vec(0))
            E:egpColor(6,hsv2rgb(H,S,V))
            
        }  
        elseif(inrange(X,512-32,512)&inrange(Y,0,512)){
            H = round(Y/512,7)*360
            E:egpColor(1,hsv2rgb(H,1,1))
            E:egpPos(8,vec2(512-8,Y))
        }
    }
}
    
