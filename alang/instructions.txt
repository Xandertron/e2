@persist Idx Scr:wirelink V:table INSTRUCTIONS:array
if(first()){
    Idx = 1
    V = table()
    #normal helper e2 functions
    function mainLoad(W:wirelink){Scr = W}
    function number string:isNum(){if(This=="0"){return 1}elseif(This:toNumber()){return 1}else{return 0}}
    function string pretty(S:string){
        #input printscr(#get(a))
        #output #get(a)
        #print(S)
        S1 = S:explode("(")
        S2 = S1:concat("(",2,S1:count())
        S3 = S2:sub(1,S2:length()-1)
        return S3
    }
    #instructions
    function void printscr(S:string){
        if(S[1]=="#"){
            #input could be #get(a)
            CTR = S:sub(2,S:length()):explode("(") #code to run or get(a)
            CTR[2,string]=CTR[2,string]:sub(1,CTR[2,string]:length()-1) #remove the )
            #print(CTR)
            S = CTR[1,string](CTR[2,string])[string]
            Scr:egpText(Idx,S,vec2(5,20*Idx-15))
        }
        else{
            Scr:egpText(Idx,S,vec2(5,20*Idx-15))
        }
        Idx++
    }
    function void clr(X:string){
        Scr:egpClear()
        Idx = 1
    }
    function void goto(N:string){
        Instruction = N:toNumber()-1
    }
    function string get(S:string){
        return V[S,number]:toString()
    }
    function void store(S:string){
        #store x|#get$y
        EX = S:explode(",")
        if(EX[2,string][1]=="#"){
            CTR = EX[2,string]:sub(2,EX[2,string]:length()):explode("$") #code to run
            S = CTR[1,string](CTR[2,string])[string] #run the code and get the string back
            #will return what y is
            VAR = EX[1,string]
            NUM = S:toNumber()
            V[VAR,number] = NUM
        }
        else{
            VAR = EX[1,string]
            NUM = EX[2,string]:toNumber()
            V[VAR,number] = NUM
        }
        #example input is store fuck|5
        
    }
    function void ifgoto(S:string){
        #example input is if x=5|c|6 or if x=5|3|6 where if x is 5 continue/goto 3 else goto 6
        EX = S:explode(",") #x=5 c 4
        VAR = EX[1,string]:explode("=")[1,string] #x
        COMPARE = EX[1,string]:explode("=")[2,string] #5
        ADVANCE = EX[2,string] #c
        ELSEADVANCE = EX[3,string] #4
        
        if(V[VAR,number] == COMPARE:toNumber()){ #if its true
            if(ADVANCE==3+""){
                Instruction = ADVANCE:toNumber()-1
            }
        }
        else{ #if its false
            if(ELSEADVANCE!="c"){
                Instruction = ELSEADVANCE:toNumber()-1
            }
        }
    }
    
    function void ifvgoto(S:string){
        #example input is if x=5|c|6 or if x=5|3|6 where if x is 5 continue/goto 3 else goto 6
        EX = S:explode(",") #x=5 c 4
        VAR = EX[1,string]:explode("=")[1,string] #x
        VARCOMPARE = EX[1,string]:explode("=")[2,string] #5
        ADVANCE = EX[2,string] #c
        ELSEADVANCE = EX[3,string] #6
        
        if(V[VAR,number] == V[VARCOMPARE,number]){ #if its true
            if(ADVANCE==3+""){
                Instruction = ADVANCE:toNumber()-1
            }
        }
        else{ #if its false
            if(ELSEADVANCE!="c"){
                Instruction = ELSEADVANCE:toNumber()-1
            }
        }
    }
    function void end(S:string){
        printscr("received end")
        Instruction = INSTRUCTIONS:count()
    }
    function void setclock(S:string){
        if(S[1]=="#"){
            #input could be #get(a)
            CTR = S:sub(2,S:length()):explode("(") #code to run or get(a)
            CTR[2,string]=CTR[2,string]:sub(1,CTR[2,string]:length()-1) #remove the )
            #print(CTR)
            S = CTR[1,string](CTR[2,string])[string]
            CLKSPD = S:toNumber()
        }
        else{
            CLKSPD = S:toNumber()
        }
    }
    #[function void line(S:string){
        EX = S:explode(",")
        Scr:egpLine(Idx,vec2(EX[1,string]:toNumber(),EX[2,string]:toNumber()),vec2(EX[3,string]:toNumber(),EX[4,string]:toNumber()))
        Idx++
    }
    function beep(S:string){
        entity():soundPlay(1,0,"buttons/button15.wav")
        soundPitch(1,S:toNumber())
    }]#
    
    
    
    #stupid long ass math down here
    function void add(S:string){
        #example input is add n|2
        EX = S:explode(",")
        VAR = EX[1,string]
        NUM = EX[2,string]:toNumber()
        V[VAR,number] = NUM+V[VAR,number]
    }
    function void sub(S:string){
        EX = S:explode(",")
        VAR = EX[1,string]
        NUM = EX[2,string]:toNumber()
        V[VAR,number] = V[VAR,number]-NUM
    }
    function void mul(S:string){
        EX = S:explode(",")
        VAR = EX[1,string]
        NUM = EX[2,string]:toNumber()
        V[VAR,number] = NUM*V[VAR,number]
    }
    function void div(S:string){
        EX = S:explode(",")
        VAR = EX[1,string]
        NUM = EX[2,string]:toNumber()
        V[VAR,number] = V[VAR,number]/NUM
    }
    function void pow(S:string){
        EX = S:explode(",")
        VAR = EX[1,string]
        NUM = EX[2,string]:toNumber()
        V[VAR,number] = V[VAR,number]^NUM
    }
    function string rdt(X:string){
        RV = ""
        for(I=1,55){
            RV += (randint(0,1) ? "\\" : "/")
        }
        return RV
    }
    
}
