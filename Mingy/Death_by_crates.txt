@name death by crates
@persist C:array Spawned PD Counter #GT:gtable H:string 
@model models/props_junk/wood_crate001a.mdl

interval(1300)
if(first()){
    entity():setMaterial("models/props_combine/com_shield001a")
    #Crate = propSpawn("models/props_junk/wood_crate001a.mdl",0)
    #Crate:setMass(350)
    #Crate:propSetFriction(2)
    #C:pushEntity(Crate)
    propSpawnUndo(0)
    #entity():propDraw(0)
    #GT = gTable("BOX")
    #H = floor((hash()*entity():id())/3000/_PI)+""
    #T = findPlayerByName("ronan")
    timer("spawn",300)
}
if(clk()){
    findByClass("player")
    Plys = players()
    for(I=1,C:count()){
        Crate = C[I,entity]
        if(Crate:isValidPhysics()){
            PD = 1250
            for(I=1,Plys:count()){
                Ply = Plys[I,entity]
                PlyD = Ply:pos():distance(Crate:pos())
                if(Ply:isAlive()&PlyD<PD){
                    T = Ply
                    PD = PlyD
                }
            }     
            D = (T:pos()-Crate:boxCenterW()):normalized()
            Dist = T:pos():distance(Crate:pos())
            CC = Crate:getColor()
            if(Dist<1250&T:isPlayer()){
                if(CC:z()==0){ #if its a explosive crate
                    if(Dist<200){
                        propSpawn("models/props_c17/oildrum001_explosive.mdl",Crate:pos(),1):propBreak()
                    }
                    Crate:applyForce(D*Crate:mass()*280)
                    Crate:setColor(floor(CC+vec(-10,10,0)))
                }
                elseif(Crate:mass()==100){
                    Crate:applyForce(D*Crate:mass()*600)
                }
                else{  #if its a normal crate
                    Crate:applyForce(D*Crate:mass()*320)
                    Crate:setColor(floor(CC-vec(5)))
                }
                if(randint(1,3)==3){ #jump randomly
                    Crate:applyForce(vec(0,0,random(250,450)*Crate:mass()))
                }
                if(CC:z()==0&CC:y()>240){ #explode massively if a red one dies
                    propSpawn("models/props_phx/mk-82.mdl",Crate:pos(),1):propBreak()
                }
                elseif(CC:x()==CC:y()&CC:z()==CC:y()&CC:x()<70){ #kill the dead normal ones
                      Crate:propBreak()
                }
            }
        }
        else{
            C:removeEntity(I)
        }
    }
}
if(clkName()=="spawn"){
    if(propCanCreate()&C:count()<50){
        R = randint(1,100)
        SD = 200
        P = entity():toWorld(vec(random(-SD,SD),random(-SD,SD),150))
        if(R<=10){ #double
            Crate = propSpawn("models/props_junk/wood_crate002a.mdl",P,0)
            Crate:setMass(350)
        }
        elseif(R>=95){ #explosive
            Crate = propSpawn("models/props_junk/wood_crate001a.mdl",P,0)
            Crate:setColor(vec(255,0,0))
            Crate:setMass(350)
        }
        elseif(R<95&R>=90){
            Crate = propSpawn("models/props_junk/wood_crate001a.mdl",P,0)
            Crate:setColor(vec(0,0,255))
            Crate:setMass(100)
        }
        else{ #normal
            Crate = propSpawn("models/props_junk/wood_crate001a.mdl",P,0)
            Crate:setMass(350)
        }
        
        Crate:propSetFriction(2)
        
        Spawned++
        C:pushEntity(Crate)
    }
    timer("spawn",2000)
}
#GT[H,number]
setName("death by crates\nCount: "+C:count()+"\nSpawned: "+Spawned)
