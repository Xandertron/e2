@name roomba
@persist E:entity Turning TurningSpeed TurningDir Angle First
@inputs Turret:entity 
@outputs Fire
@model models/mechanics/gears2/gear_18t1.mdl
#[
    Made by Xandertron5000 - STEAM_0:1:42942061 - github.com/Xandertron
    No it doesn't suck :P
]#
interval(100)
if(first()){
    E = entity()
    TurningSpeed = 6
    #holograms here
    holoCreate(1)
    holoScale(1,vec(0.1))
    holoCreate(2)
    holoModel(2,"hq_cylinder")
    holoScale(2,vec(3.5,3.5,0.6))
    holoColor(2,vec(90))
    holoParent(2,E)
    holoCreate(3)
    holoModel(3,"hq_torus_thin")
    holoScale(3,vec(3.9,3.9,16))
    holoColor(3,vec(20))
    holoParent(3,E)
    holoCreate(4)
    holoModel(4,"hq_torus_thin")
    holoScale(4,vec(2,2,2))
    holoPos(4,E:pos()+vec(0,0,3))
    holoAng(4,E:angles()+ang(-5,0,0))
    holoColor(4,vec(20))
    holoParent(4,E)    
    First = 1
    E:setAng(ang(0,randint(1,4)*90,0))
}
R = rangerOffset(30,E:boxCenterW(),E:forward())
RD = rangerOffset(1000,E:pos(),vec(0,0,-10))
holoPos(1,RD:position())
if(R:distance()<30&Turning==0){
    Turning = 1
    D = randint(1,2)
    if(D==1){
        TurningDir=1
    }
    else{
        TurningDir=-1
    }
}
if(Turning==0){
    E:setPos(vec(E:toWorld(vec(1,0,0)):x(),E:toWorld(vec(1,0,0)):y(),RD:position():z()+5))
}
else{
    Angle++
    E:setAng(E:angles()+ang(0,TurningSpeed*TurningDir,0))
}
E:propFreeze(1)
#set 100 to the models radius (so that the body will go against the wall)
if(Angle*TurningSpeed==abs(90)){
    Angle = 0
    Turning = 0
}
if(Turret:type()=="gmod_wire_turret"){
    Turret:createWire(E,"Fire","Fire")
    Fire = 1
    if(First){
        First = 0
        holoCreate(5)
        holoPos(5,E:pos()+vec(0,0,4))
        holoScale(5,vec(0.3))
        holoModel(5,"models/props_phx/construct/wood/wood_panel1x1.mdl") 
        holoCreate(6)
        holoPos(6,E:pos()+vec(0,1,18.75))
        holoAng(6,ang(90,90,0))
        holoScale(6,vec(0.6,0.5,0.6))
        holoModel(6,"models/props_phx/construct/wood/wood_boardx1.mdl") 
        holoParent(6,5)
    }
    Turret:setPos(E:pos()+vec(0,0,30))
    TargetAng = ((owner():attachmentPos("eyes")-vec(0,0,5))-Turret:pos()):toAngle()
    holoAng(5,ang(0,TargetAng:yaw(),0))
    holoPos(5,E:pos()+vec(0,0,4))
    Turret:setAng(TargetAng)
}
else{
    holoDelete(5)
    holoDelete(6)
    First = 1
}
