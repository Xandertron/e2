@name 
@inputs E:wirelink
@outputs 
@persist [P PX T]:array [LeftMost Curr Next]:vector2 I Count G HI
@trigger 
#[
    Made by Xandertron5000 - STEAM_0:1:42942061 - github.com/Xandertron
    Wraps all points with a line, or in other words a hull generator.
]#
if(first()){
    entity():createWire(entity():isWeldedTo(),"E","wirelink")
    entity():createWire(entity():isWeldedTo(),"U","User")
    E:egpClear()
    Buffer = 10
    Count = 200
    for(I=1,Count){
        V = vec2(random(Buffer,512-Buffer),random(Buffer,512-Buffer))
        P:pushVector2(V)
        PX:pushNumber(V:x())
        E:egpCircle(I,P[I,vector2],vec2(2))
    }
    LeftMost = P[PX:minIndex(),vector2]
    E:egpColor(PX:minIndex(),vec(255,0,0))
    I=1
    Curr = LeftMost
    Next = P[1,vector2]
    G=1
}
runOnTick(1)
if(G){
    #next vertex will be the next hull point
    #checking is the one to check against, to sorta get the most left point
    Check = P[I,vector2]
    E:egpLine(250,Check,Curr)
    A = Next  - Curr
    B = Check - Curr
    C = A:cross(B)
    if(C<0){
        Next = Check
        E:egpLine(251,Next,Curr)
        E:egpColor(251,vec(0,255,0))
    }
    if(I==Count){
        if(Next==LeftMost){
            E:egpRemove(251)
            E:egpLine(252+HI,Next,Curr)
            E:egpRemove(252+HI+1)
            G=0
            reset()
        }
        else{
            E:egpLine(252+HI,Next,Curr)
            HI++
            Curr = Next
            Next = P[1,vector2]
            I=1
        } 
        if(A==B){print("AAA")}
    }
    I++
}
